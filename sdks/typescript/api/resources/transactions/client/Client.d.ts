/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as core from "../../../../core";
import { ApitureApi } from "../../../..";
export declare namespace Transactions {
    interface Options {
        environment: string;
        acessToken: core.Supplier<string>;
        apiKey?: core.Supplier<string | undefined>;
    }
}
export declare class Transactions {
    protected readonly options: Transactions.Options;
    constructor(options: Transactions.Options);
    /**
     * Return a [paginated](https://dx.apiture.com/docs/api-documentation/concepts/pagination) collection of transaction history for this internal account. The [`nextPage_url`](https://dx.apiture.com/docs/api-documentation/concepts/links) link in the response, if present, is a pagination link to the next page of transactions for the given filters. This operation returns a 403 Forbidden error if the customer does not have `view` permissions in the `account.allows` object, or a 422 Unprocessable Entity if called on an external account. The default response lists only recent transactions. Normally, this is transactions for the most recent 30 days, although for high-volume accounts, it may be a shorter period.
     * @throws {ApitureApi.BadRequest}
     * @throws {ApitureApi.Unauthorized}
     * @throws {ApitureApi.Forbidden}
     * @throws {ApitureApi.NotFound}
     * @throws {ApitureApi.UnprocessableEntity}
     * @throws {ApitureApi.TooManyRequests}
     */
    listTransactions(accountId: string, request?: ApitureApi.ListTransactionsRequest): Promise<ApitureApi.Transactions>;
    /**
     * Return a collection of transaction categories. The response is limited to 1,000 categories. This is a _conditional operation_ when the `If-None-Match` header is used. If the client has a `transactionCategories` response and the `ETag` returned from a previous call, this operation returns a 304 Not Modified if called again when the categories collection has not changed.
     * @throws {ApitureApi.BadRequest}
     * @throws {ApitureApi.Unauthorized}
     * @throws {ApitureApi.Forbidden}
     * @throws {ApitureApi.UnprocessableEntity}
     */
    listTransactionCategories(request?: ApitureApi.ListTransactionCategoriesRequest): Promise<ApitureApi.TransactionCategories>;
    protected _getAuthorizationHeader(): Promise<string | undefined>;
}
